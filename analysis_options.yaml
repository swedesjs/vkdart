include: package:lints/recommended.yaml

linter:
  rules:
    - always_use_package_imports
    - avoid_dynamic_calls
    - camel_case_types
    - empty_statements
    - avoid_empty_else
    - avoid_print
    - avoid_relative_lib_imports
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - collection_methods_unrelated_type
    - comment_references
    - control_flow_in_finally
    - deprecated_member_use_from_same_package
    - discarded_futures
    - hash_and_equals
    - implicit_reopen
    - invalid_case_patterns
    - literal_only_boolean_expressions
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - no_self_assignments
    - no_wildcard_variable_uses
    - prefer_void_to_null
    - test_types_in_equals
    - throw_in_finally
    - unnecessary_statements
    - valid_regexps
    - always_declare_return_types
    - always_put_control_body_on_new_line
    - always_put_required_named_parameters_first
    - annotate_overrides
    - annotate_redeclares
    - avoid_annotating_with_dynamic
    - avoid_bool_literals_in_conditional_expressions
    - avoid_catches_without_on_clauses
    - avoid_classes_with_only_static_members
    - avoid_double_and_int_checks
    - avoid_equals_and_hash_code_on_mutable_classes
    - avoid_escaping_inner_quotes
    - avoid_field_initializers_in_const_classes
    - avoid_final_parameters
    - avoid_returning_this
    - avoid_shadowing_type_parameters
    - avoid_single_cascade_in_expression_statements
    - avoid_types_on_closure_parameters
    - avoid_unused_constructor_parameters
    - cascade_invocations
    - cast_nullable_to_non_nullable
    - combinators_ordering
    - constant_identifier_names
    - curly_braces_in_flow_control_structures
    - dangling_library_doc_comments
    - directives_ordering
    - do_not_use_environment
    - eol_at_end_of_file
    - file_names
    - implementation_imports
    - join_return_with_assignment
    - leading_newlines_in_multiline_strings
    - library_annotations
    - library_names
    - library_prefixes
    - lines_longer_than_80_chars
    - matching_super_parameters
    - missing_whitespace_between_adjacent_strings
    - no_leading_underscores_for_library_prefixes
    - no_leading_underscores_for_local_identifiers
    - no_literal_bool_comparisons
    - noop_primitive_operations
    - omit_local_variable_types
    - one_member_abstracts
    - only_throw_errors
    - package_api_docs
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_asserts_with_message
    - prefer_const_declarations
    - prefer_constructors_over_static_methods
    - prefer_expression_function_bodies
    - prefer_final_fields
    - prefer_final_locals
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_mixin
    - prefer_single_quotes
    - public_member_api_docs
    - require_trailing_commas
    - sort_constructors_first
    - sort_unnamed_constructors_first
    - tighten_type_of_initializing_formals
    - unawaited_futures
    - unnecessary_await_in_return
    - unnecessary_brace_in_string_interps
    - unnecessary_lambdas
    - unnecessary_library_directive
    - unnecessary_null_checks
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_string_escapes
    - unnecessary_this
    - unnecessary_to_list_in_spreads
    - unreachable_from_main
    - use_enums
    - use_function_type_syntax_for_parameters
    - use_is_even_rather_than_modulo
    - use_late_for_private_fields_and_variables
    - use_named_constants
    - use_raw_strings
    - use_string_buffers
    - use_to_and_as_if_applicable
    - use_test_throws_matchers
    - void_checks
    - depend_on_referenced_packages
    - package_names
    - secure_pubspec_urls
    - sort_pub_dependencies

analyzer:
  language:
    strict-casts: true
    strict-inference: false
    strict-raw-types: true
